{"version":3,"sources":["controllers/project.js"],"names":["ctx","next","data","bearerToken","token","options","url","resolve","api_address","headers","Authorization","Accept","accept","response","request","getAsync","error","listWithData","statusCode","body","projects","JSON","parse","redirect","list","project_id","params","id","project_menu","renderDetailWithData","detail","patches","name_autofocus","createWithData","create","debug","contentType","json","postAsync","_id","errors","length","field","name_error","message","createRequest","getProjectVewsions","versions_object","project_versions","project_name","renderCreatePatchWithData","createPatch","content_type","project_version_autofocus","project_version_error","hash_autofocus","hash_error","patch_url_autofocus","patch_url_error","createPatchRequest","renderSetInfoWithData","content","setInfo","request_body","setInfoRequest","renderSettingMembers","setMembers","add_member","add_error","add_email_autofocus","addMemberRequest","member_id","deleteAsync","deleteMemberRequest","setMembersWithData","versions","version","push","render_data","name","promisifyAll","main_menu","mainMenuData","html","join","__dirname","node_env","process","env","NODE_ENV","project_set_menu"],"mappings":";;;;;;;;;;;;gEAqBO,iBAAoBA,GAApB,EAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,4BADD,GACQ,EADR;AAEGC,mCAFH,GAEiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAFjB;AAGGK,+BAHH,GAGa;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,cAAhC,CADO;AAEZC,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBAHb;AAUCC,gCAVD,GAUY,IAVZ;AAAA;AAAA;AAAA,+BAYkBC,QAAQC,QAAR,CAAiBV,OAAjB,CAZlB;;AAAA;AAYCQ,gCAZD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAcCX,6BAAKc,KAAL,GAAa,sBAAb;AACAC,qCAAajB,GAAb,EAAkBE,IAAlB;AAfD;;AAAA;AAmBGgB,kCAnBH,GAmBgBL,SAASK,UAnBzB;AAoBGC,4BApBH,GAoBUN,SAASM,IApBnB;;AAqBH,4BAAID,cAAc,GAAlB,EAAuB;AACnBhB,iCAAKkB,QAAL,GAAgBC,KAAKC,KAAL,CAAWH,IAAX,CAAhB;AACAF,yCAAajB,GAAb,EAAkBE,IAAlB;AACH,yBAHD,MAGO,IAAIgB,cAAc,GAAlB,EAAuB;AAC1BlB,gCAAIuB,QAAJ,CAAa,QAAb;AACH,yBAFM,MAEA;AACHrB,iCAAKc,KAAL,GAAa,sBAAb;AACAC,yCAAajB,GAAb,EAAkBE,IAAlB;AACH;;AA7BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAesB,I;;;;;;iEAgCf,kBAAsBxB,GAAtB,EAA2BC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAECzB,4BAFD,GAEQ,EAFR;AAGGC,mCAHH,GAGiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAHjB;;AAKH;;AACAE,6BAAK0B,YAAL,GAAoB;AAChBD,gCAAIF;AADY,yBAApB;;AAIA;AAEUpB,+BAZP,GAYiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAA/C,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBAZjB;AAmBKC,gCAnBL,GAmBgB,IAnBhB;AAAA;AAAA;AAAA,+BAqBsBC,QAAQC,QAAR,CAAiBV,OAAjB,CArBtB;;AAAA;AAqBKQ,gCArBL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBKX,6BAAKc,KAAL,GAAa,2BAAb;AACAa,6CAAqB7B,GAArB,EAA0BE,IAA1B;AAxBL;;AAAA;AA4BOgB,kCA5BP,GA4BoBL,SAASK,UA5B7B;AA6BOC,4BA7BP,GA6BcN,SAASM,IA7BvB;;AAAA,8BA8BKD,cAAc,GA9BnB;AAAA;AAAA;AAAA;;AA+BKhB,6BAAK4B,MAAL,GAAcT,KAAKC,KAAL,CAAWH,IAAX,CAAd;AA/BL;AAAA;;AAAA;AAAA,8BAgCYD,cAAc,GAhC1B;AAAA;AAAA;AAAA;;AAiCKlB,4BAAIuB,QAAJ,CAAa,QAAb;AAjCL;;AAAA;AAoCKrB,6BAAKc,KAAL,GAAa,2BAAb;AACAa,6CAAqB7B,GAArB,EAA0BE,IAA1B;AArCL;;AAAA;AA4COG,gCA5CP,GA4CiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,UAA5D,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBA5CjB;AAmDKC,iCAnDL,GAmDgB,IAnDhB;AAAA;AAAA;AAAA,+BAqDsBC,QAAQC,QAAR,CAAiBV,QAAjB,CArDtB;;AAAA;AAqDKQ,iCArDL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuDKX,6BAAKc,KAAL,GAAa,oBAAb;AACAa,6CAAqB7B,GAArB,EAA0BE,IAA1B;AAxDL;;AAAA;AA4DOgB,mCA5DP,GA4DoBL,UAASK,UA5D7B;AA6DOC,6BA7DP,GA6DcN,UAASM,IA7DvB;;AAAA,8BA8DKD,eAAc,GA9DnB;AAAA;AAAA;AAAA;;AA+DKhB,6BAAK6B,OAAL,GAAeV,KAAKC,KAAL,CAAWH,KAAX,CAAf;AA/DL;AAAA;;AAAA;AAAA,8BAgEYD,eAAc,GAhE1B;AAAA;AAAA;AAAA;;AAiEKlB,4BAAIuB,QAAJ,CAAa,QAAb;AAjEL;;AAAA;AAoEKrB,6BAAKc,KAAL,GAAa,oBAAb;AACAa,6CAAqB7B,GAArB,EAA0BE,IAA1B;AArEL;;AAAA;;AA0EH2B,6CAAqB7B,GAArB,EAA0BE,IAA1B;;AA1EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe4B,M;;;;;;iEA6Ef,kBAAsB9B,GAAtB,EAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,4BADH,GACU;AACT8B,4CAAgB;AADP,yBADV;;AAIHC,uCAAejC,GAAf,EAAoBE,IAApB;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAegC,M;;;;;;iEAOf,kBAA6BlC,GAA7B,EAAkCC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGE,mCADH,GACiBC,MAAMD,WAAN,CAAkBH,GAAlB,CADjB;AAGCE,4BAHD,GAGQF,IAAIc,OAAJ,CAAYK,IAHpB;;AAIHgB,8BAAMjC,IAAN;AACMG,+BALH,GAKa;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,WAAhC,CADO;AAEZC,qCAAS;AACL2B,6CAAa,kBADR;AAEL1B,+CAAeP,WAFV;AAGLQ,wCAAQ,iBAAOC;AAHV,6BAFG;AAOZyB,kCAAM,IAPM;AAQZlB,kCAAMjB;AARM,yBALb;AAeCW,gCAfD,GAeY,IAfZ;AAAA;AAAA;AAAA,+BAiBkBC,QAAQwB,SAAR,CAAkBjC,OAAlB,CAjBlB;;AAAA;AAiBCQ,gCAjBD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAmBCX,6BAAKc,KAAL,GAAa,uBAAb;AACAiB,uCAAejC,GAAf,EAAoBE,IAApB;AApBD;;AAAA;AAwBGgB,kCAxBH,GAwBgBL,SAASK,UAxBzB;AAyBGC,4BAzBH,GAyBUN,SAASM,IAzBnB;;AA0BH,4BAAID,cAAc,GAAd,IAAqBA,cAAc,GAAvC,EAA4C;AACxClB,gCAAIuB,QAAJ,CAAa,eAAeJ,KAAKoB,GAAjC;AACH,yBAFD,MAEO,IAAIrB,cAAc,GAAlB,EAAuB;AAC1BlB,gCAAIuB,QAAJ,CAAa,QAAb;AACH,yBAFM,MAEA;AACH,gCAAIL,cAAc,GAAlB,EAAuB;AACnB,oCAAIC,QAAQA,KAAKqB,MAAb,IAAuBrB,KAAKqB,MAAL,CAAYC,MAAZ,GAAqB,CAAhD,EAAmD;AACzCzB,yCADyC,GACjCG,KAAKqB,MAAL,CAAY,CAAZ,CADiC;;AAE/C,wCAAIxB,MAAM0B,KAAN,IAAe,MAAnB,EAA2B;AACvBxC,6CAAK8B,cAAL,GAAsB,WAAtB;AACA9B,6CAAKyC,UAAL,GAAkBxB,KAAKyB,OAAvB;AACH,qCAHD,MAGO;AACH1C,6CAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACH;AACJ,iCARD,MAQO;AACH1C,yCAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACH;AACJ,6BAZD,MAYO;AACH1C,qCAAKc,KAAL,GAAa,uBAAb;AACH;AACDiB,2CAAejC,GAAf,EAAoBE,IAApB;AACH;;AA/CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe2C,a;;;;;;iEAmDf,kBAA2B7C,GAA3B,EAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,4BADD,GACQ,EADR;AAEGuB,kCAFH,GAEgBzB,IAAI0B,MAAJ,CAAWC,EAF3B;;AAGHzB,6BAAKyB,EAAL,GAAUF,UAAV;;AAEA;AALG;AAAA,+BAM2BqB,mBAAmB9C,GAAnB,CAN3B;;AAAA;AAMG+C,uCANH;;AAOH,4BAAIA,eAAJ,EAAqB;AACjB7C,iCAAK8C,gBAAL,GAAwBD,gBAAgBC,gBAAxC;AACA9C,iCAAK+C,YAAL,GAAoBF,gBAAgBE,YAApC;AACH;;AAED;AACA/C,6BAAK0B,YAAL,GAAoB;AAChBD,gCAAIF;AADY,yBAApB;;AAIAyB,kDAA0BlD,GAA1B,EAA+BE,IAA/B;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeiD,W;;;;;;iEAoBf,kBAAkCnD,GAAlC,EAAuCC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAEGxB,mCAFH,GAEiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAFjB;AAGCE,4BAHD,GAGQF,IAAIc,OAAJ,CAAYK,IAHpB;;AAIHgB,8BAAMjC,IAAN;AACMG,+BALH,GAKa;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,UAA5D,CADO;AAEZY,kCAAM,IAFM;AAGZ5B,qCAAS;AACL2B,6CAAa,iBAAOgB,YADf;AAEL1C,+CAAeP,WAFV;AAGLQ,wCAAQ,iBAAOC;AAHV,6BAHG;AAQZO,kCAAMjB;AARM,yBALb;AAeCW,gCAfD,GAeY,IAfZ;AAAA;AAAA;AAAA,+BAiBkBC,QAAQwB,SAAR,CAAkBjC,OAAlB,CAjBlB;;AAAA;AAiBCQ,gCAjBD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAmBCX,6BAAKc,KAAL,GAAa,qBAAb;AACAkC,kDAA0BlD,GAA1B,EAA+BE,IAA/B;AApBD;;AAAA;AAwBGgB,kCAxBH,GAwBgBL,SAASK,UAxBzB;AAyBGC,4BAzBH,GAyBUN,SAASM,IAzBnB;;AA0BH,4BAAID,cAAc,GAAd,IAAqBA,cAAc,GAAvC,EAA4C;AACxClB,gCAAIuB,QAAJ,CAAa,eAAeE,UAA5B;AACH,yBAFD,MAEO,IAAIP,cAAc,GAAlB,EAAuB;AAC1BlB,gCAAIuB,QAAJ,CAAa,QAAb;AACH,yBAFM,MAEA;AACH,gCAAIL,cAAc,GAAlB,EAAuB;AACnB,oCAAIC,QAAQA,KAAKqB,MAAb,IAAuBrB,KAAKqB,MAAL,CAAYC,MAAZ,GAAqB,CAAhD,EAAmD;AACzCzB,yCADyC,GACjCG,KAAKqB,MAAL,CAAY,CAAZ,CADiC;;AAE/C,wCAAIxB,MAAM0B,KAAN,IAAe,iBAAnB,EAAsC;AAClCxC,6CAAKmD,yBAAL,GAAiC,WAAjC;AACAnD,6CAAKoD,qBAAL,GAA6BnC,KAAKyB,OAAlC;AACH,qCAHD,MAGO,IAAI5B,MAAM0B,KAAN,IAAe,MAAnB,EAA2B;AAC9BxC,6CAAKqD,cAAL,GAAsB,WAAtB;AACArD,6CAAKsD,UAAL,GAAkBrC,KAAKyB,OAAvB;AACH,qCAHM,MAGA,IAAI5B,MAAM0B,KAAN,IAAe,WAAnB,EAAgC;AACnCxC,6CAAKuD,mBAAL,GAA2B,WAA3B;AACAvD,6CAAKwD,eAAL,GAAuBvC,KAAKyB,OAA5B;AACH,qCAHM,MAGA;AACH1C,6CAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACH;AACJ,iCAdD,MAcO;AACH1C,yCAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACH;AACJ,6BAlBD,MAkBO;AACH1C,qCAAKc,KAAL,GAAa,qBAAb;AACH;AACDiB,2CAAejC,GAAf,EAAoBE,IAApB;AACH;;AAED;AACAA,6BAAK0B,YAAL,GAAoB;AAChBD,gCAAIF;AADY,yBAApB;;AAIAvB,6BAAKyB,EAAL,GAAUF,UAAV;AACAyB,kDAA0BlD,GAA1B,EAA+BE,IAA/B;;AA7DG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeyD,kB;;;;;;iEAgEf,kBAAuB3D,GAAvB,EAA4BC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAECzB,4BAFD,GAEQ,EAFR;AAGGC,mCAHH,GAGiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAHjB;;AAKH;;AAEUK,+BAPP,GAOiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAA/C,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBAPjB;AAcKC,gCAdL,GAcgB,IAdhB;AAAA;AAAA;AAAA,+BAgBsBC,QAAQC,QAAR,CAAiBV,OAAjB,CAhBtB;;AAAA;AAgBKQ,gCAhBL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAkBKX,6BAAKc,KAAL,GAAa,2BAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAnBL;;AAAA;AAuBOP,kCAvBP,GAuBoBL,SAASK,UAvB7B;AAwBOC,4BAxBP,GAwBcN,SAASM,IAxBvB;;AAAA,8BAyBKD,eAAe,GAzBpB;AAAA;AAAA;AAAA;;AA0BKhB,6BAAK2D,OAAL,GAAexC,KAAKC,KAAL,CAAWH,IAAX,CAAf;AA1BL;AAAA;;AAAA;AAAA,8BA2BYD,eAAe,GA3B3B;AAAA;AAAA;AAAA;;AA4BKlB,4BAAIuB,QAAJ,CAAa,QAAb;AA5BL;;AAAA;AAAA,8BA8BYL,eAAe,GA9B3B;AAAA;AAAA;AAAA;;AA+BKhB,6BAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACAgB,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAhCL;;AAAA;AAmCKvB,6BAAKc,KAAL,GAAa,2BAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AApCL;;AAAA;AA2COpB,iCA3CP,GA2CiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,UAA5D,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBA3CjB;AAkDKC,kCAlDL,GAkDgB,IAlDhB;AAAA;AAAA;AAAA,+BAoDsBC,QAAQC,QAAR,CAAiBV,SAAjB,CApDtB;;AAAA;AAoDKQ,kCApDL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAsDKX,6BAAKc,KAAL,GAAa,oBAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAvDL;;AAAA;AA2DOP,oCA3DP,GA2DoBL,WAASK,UA3D7B;AA4DOC,8BA5DP,GA4DcN,WAASM,IA5DvB;;AAAA,8BA6DKD,iBAAe,GA7DpB;AAAA;AAAA;AAAA;;AA8DKhB,6BAAK6B,OAAL,GAAeV,KAAKC,KAAL,CAAWH,MAAX,CAAf;AA9DL;AAAA;;AAAA;AAAA,8BA+DYD,iBAAe,GA/D3B;AAAA;AAAA;AAAA;;AAgEKlB,4BAAIuB,QAAJ,CAAa,QAAb;AAhEL;;AAAA;AAAA,8BAkEYL,iBAAe,GAlE3B;AAAA;AAAA;AAAA;;AAmEKhB,6BAAKc,KAAL,GAAaG,OAAKyB,OAAlB;AACAgB,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AApEL;;AAAA;AAuEKvB,6BAAKc,KAAL,GAAa,oBAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAxEL;;AAAA;;AA6EHmC,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;;AA7EG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeqC,O;;;;;;iEAgFf,kBAA8B9D,GAA9B,EAAmCC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAEGxB,mCAFH,GAEiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAFjB;AAGG+D,oCAHH,GAGkB/D,IAAIc,OAAJ,CAAYK,IAH9B;AAICjB,4BAJD,GAIQ;AACP2D,qCAASE;AADF,yBAJR;;AAOH5B,8BAAMjC,IAAN;;AAEMG,+BATH,GASa;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAA/C,CADO;AAEZhB,qCAAS;AACL2B,6CAAa,kBADR;AAEL1B,+CAAeP,WAFV;AAGLQ,wCAAQ,iBAAOC;AAHV,6BAFG;AAOZyB,kCAAM,IAPM;AAQZlB,kCAAM4C;AARM,yBATb;AAmBClD,gCAnBD,GAmBY,IAnBZ;AAAA;AAAA;AAAA,+BAqBkBC,QAAQwB,SAAR,CAAkBjC,OAAlB,CArBlB;;AAAA;AAqBCQ,gCArBD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBCX,6BAAKc,KAAL,GAAa,4BAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAxBD;;AAAA;AA4BGP,kCA5BH,GA4BgBL,SAASK,UA5BzB;AA6BGC,4BA7BH,GA6BUN,SAASM,IA7BnB;;AAAA,8BA8BCD,cAAc,GAAd,IAAqBA,aAAa,GA9BnC;AAAA;AAAA;AAAA;;AA+BClB,4BAAIuB,QAAJ,CAAa,eAAeE,UAA5B;AA/BD;AAAA;;AAAA;AAAA,8BAgCQP,eAAe,GAhCvB;AAAA;AAAA;AAAA;;AAiCClB,4BAAIuB,QAAJ,CAAa,QAAb;AAjCD;;AAAA;AAAA,8BAmCQL,eAAe,GAnCvB;AAAA;AAAA;AAAA;;AAAA,8BAoCKC,KAAKuB,KAAL,GAAa,MApClB;AAAA;AAAA;AAAA;;AAqCKxC,6BAAKyC,UAAL,GAAkBxB,KAAKyB,OAAvB;AACA1C,6BAAK8B,cAAL,GAAsB,WAAtB;AACA4B,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAvCL;;AAAA;AA0CKvB,6BAAKc,KAAL,GAAaG,KAAKyB,OAAlB;AACAgB,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AA3CL;;AAAA;AAAA;AAAA;;AAAA;AA+CCvB,6BAAKc,KAAL,GAAa,4BAAb;AACA4C,8CAAsB5D,GAAtB,EAA2BE,IAA3B,EAAiCuB,UAAjC;AAhDD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeuC,c;;;;;;iEAqDf,kBAA0BhE,GAA1B,EAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAAA,0DAEIsC,qBAAqBjE,GAArB,EAA0B,IAA1B,EAAgCyB,UAAhC,CAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeyC,U;;;;;;kEAKf,mBAAgClE,GAAhC,EAAqCC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAEGxB,mCAFH,GAEiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAFjB;AAIG+D,oCAJH,GAIkB/D,IAAIc,OAAJ,CAAYK,IAJ9B;;AAKHgB,8BAAM4B,YAAN;;AAEI7D,4BAPD,GAOQ,EAPR;;AASH;;AACAA,6BAAKiE,UAAL,GAAkBJ,YAAlB;AAEU1D,+BAZP,GAYiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,UAA5D,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELiC,6CAAa,iBAAOgB,YAFf;AAGLzC,wCAAQ,iBAAOC;AAHV,6BAFG;AAOZyB,kCAAM,IAPM;AAQZlB,kCAAM4C;AARM,yBAZjB;AAsBKlD,gCAtBL,GAsBgB,IAtBhB;AAAA;AAAA;AAAA,+BAwBsBC,QAAQwB,SAAR,CAAkBjC,OAAlB,CAxBtB;;AAAA;AAwBKQ,gCAxBL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA0BKX,6BAAKkE,SAAL,GAAiB,mBAAjB;AACAlE,6BAAKmE,mBAAL,GAA2B,WAA3B;AA3BL,2DA4BYJ,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CA5BZ;;AAAA;AA+BOP,kCA/BP,GA+BoBL,SAASK,UA/B7B;AAgCOC,4BAhCP,GAgCcN,SAASM,IAhCvB;;AAAA,8BAiCKD,cAAc,GAAd,IAAqBA,aAAa,GAjCvC;AAAA;AAAA;AAAA;;AAAA,2DAkCY+C,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CAlCZ;;AAAA;AAAA,8BAmCYP,cAAc,GAnC1B;AAAA;AAAA;AAAA;;AAoCKlB,4BAAIuB,QAAJ,CAAa,QAAb;AApCL;;AAAA;AAAA,8BAsCYL,cAAc,GAtC1B;AAAA;AAAA;AAAA;;AAuCKhB,6BAAKkE,SAAL,GAAiBjD,KAAKyB,OAAtB;AACA1C,6BAAKmE,mBAAL,GAA2B,WAA3B;AAxCL,2DAyCYJ,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CAzCZ;;AAAA;AA2CKvB,6BAAKkE,SAAL,GAAiB,mBAAjB;AACAlE,6BAAKmE,mBAAL,GAA2B,WAA3B;AA5CL,2DA6CYJ,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CA7CZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe6C,gB;;;;;;kEAkDf,mBAAmCtE,GAAnC,EAAwCC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGwB,kCADH,GACgBzB,IAAI0B,MAAJ,CAAWC,EAD3B;AAEG4C,iCAFH,GAEevE,IAAI0B,MAAJ,CAAW6C,SAF1B;AAGGpE,mCAHH,GAGiBC,MAAMD,WAAN,CAAkBH,GAAlB,CAHjB;AAKCE,4BALD,GAKQ,EALR;;AAOH;;AAEUG,+BATP,GASiB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,WAA5B,GAA0C8C,SAA1E,CADO;AAEZ9D,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBATjB;AAgBKC,gCAhBL,GAgBgB,IAhBhB;AAAA;AAAA;AAAA,+BAkBsBC,QAAQ0D,WAAR,CAAoBnE,OAApB,CAlBtB;;AAAA;AAkBKQ,gCAlBL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoBKX,6BAAKc,KAAL,GAAa,sBAAb;AApBL,2DAqBYiD,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CArBZ;;AAAA;AAwBOP,kCAxBP,GAwBoBL,SAASK,UAxB7B;AAyBOC,4BAzBP,GAyBcN,SAASM,IAzBvB;;AAAA,8BA0BKD,cAAc,GAAd,IAAqBA,aAAa,GA1BvC;AAAA;AAAA;AAAA;;AAAA,2DA2BY+C,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CA3BZ;;AAAA;AAAA,8BA4BYP,cAAc,GA5B1B;AAAA;AAAA;AAAA;;AA6BKlB,4BAAIuB,QAAJ,CAAa,QAAb;AA7BL;;AAAA;AAgCKrB,6BAAKc,KAAL,GAAa,sBAAb;AAhCL,2DAiCYiD,qBAAqBjE,GAArB,EAA0BE,IAA1B,EAAgCuB,UAAhC,CAjCZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAegD,mB;;;;;AAuCtB;;;kEAEA,mBAAoCzE,GAApC,EAAyCE,IAAzC,EAA+CuB,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AACIvB,+BAAOA,QAAQ,EAAf;AACA;AACMC,mCAHV,GAGwBC,MAAMD,WAAN,CAAkBH,GAAlB,CAHxB;;AAKI;;AACAE,6BAAK0B,YAAL,GAAoB;AAChBD,gCAAIF;AADY,yBAApB;;AAIA;AAEUpB,+BAZd,GAYwB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAA/C,CADO;AAEZhB,qCAAS;AACLC,+CAAeP,WADV;AAELQ,wCAAQ,iBAAOC;AAFV;AAFG,yBAZxB;AAmBYC,gCAnBZ,GAmBuB,IAnBvB;AAAA;AAAA;AAAA,+BAqB6BC,QAAQC,QAAR,CAAiBV,OAAjB,CArB7B;;AAAA;AAqBYQ,gCArBZ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBYX,6BAAKc,KAAL,GAAa,2BAAb;AACA0D,2CAAmB1E,GAAnB,EAAwBE,IAAxB,EAA8BuB,UAA9B;AAxBZ;;AAAA;AA4BcP,kCA5Bd,GA4B2BL,SAASK,UA5BpC;AA6BcC,4BA7Bd,GA6BqBN,SAASM,IA7B9B;;AAAA,8BA8BYD,cAAc,GAAd,IAAqBA,aAAa,GA9B9C;AAAA;AAAA;AAAA;;AA+BYhB,6BAAK4B,MAAL,GAAcT,KAAKC,KAAL,CAAWH,IAAX,CAAd;AA/BZ;AAAA;;AAAA;AAAA,8BAgCmBD,cAAc,GAhCjC;AAAA;AAAA;AAAA;;AAiCYlB,4BAAIuB,QAAJ,CAAa,QAAb;AAjCZ;;AAAA;AAoCYrB,6BAAKc,KAAL,GAAa,2BAAb;AACA0D,2CAAmB1E,GAAnB,EAAwBE,IAAxB,EAA8BuB,UAA9B;AArCZ;;AAAA;AAyCIiD,2CAAmB1E,GAAnB,EAAwBE,IAAxB,EAA8BuB,UAA9B;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAewC,oB;;;;;;kEA4Cf,mBAAkCjE,GAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUyB,kCADV,GACuBzB,IAAI0B,MAAJ,CAAWC,EADlC;AAGUxB,mCAHV,GAGwBC,MAAMD,WAAN,CAAkBH,GAAlB,CAHxB;AAIUK,+BAJV,GAIoB;AACZC,iCAAK,cAAIC,OAAJ,CAAY,iBAAOC,WAAnB,EAAgC,eAAeiB,UAAf,GAA4B,WAA5D,CADO;AAEZhB,qCAAS;AACL2B,6CAAa,kBADR;AAEL1B,+CAAeP,WAFV;AAGLQ,wCAAQ,iBAAOC;AAHV;AAFG,yBAJpB;AAYQC,gCAZR,GAYmB,IAZnB;AAAA;AAAA;AAAA,+BAcyBC,QAAQC,QAAR,CAAiBV,OAAjB,CAdzB;;AAAA;AAcQQ,gCAdR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2DAgBe,IAhBf;;AAAA;AAmBUK,kCAnBV,GAmBuBL,SAASK,UAnBhC;AAoBUC,4BApBV,GAoBiBN,SAASM,IApB1B;;AAqBIgB,8BAAMhB,IAAN;;AArBJ,8BAsBQD,cAAc,GAAd,IAAqBA,aAAa,GAtB1C;AAAA;AAAA;AAAA;;AAuBY6B,uCAvBZ,GAuB8B1B,KAAKC,KAAL,CAAWH,IAAX,CAvB9B;;AAwBQgB,8BAAMY,eAAN;AACIC,wCAzBZ,GAyB+B,EAzB/B;AAAA;AAAA;AAAA;AAAA;;AA0BQ,yCAAoBD,gBAAgB4B,QAApC,uHAA8C;AAArCC,mCAAqC;;AAC1C5B,6CAAiB6B,IAAjB,CAAsBD,QAAQrC,GAA9B;AACH;AA5BT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA6BQQ,wCAAgBC,gBAAhB,GAAmCA,gBAAnC;AA7BR,2DA8BeD,eA9Bf;;AAAA;AA+BW,4BAAI7B,cAAc,GAAlB,EAAuB;AAC1BlB,gCAAIuB,QAAJ,CAAa,QAAb;AACH;;AAjCL;AAAA,2DAkCW,IAlCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeuB,kB;;;;;AAqCf;;AAlkBA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;IAAY1C,K;;AAEZ;;IAAY0E,W;;AAEZ;;;;AACA;;;;;;;;AAhBA;;;;AAiBA,IAAM3C,QAAQ,oBAAU,kBAAI4C,IAAd,CAAd;;AAEA,IAAMjE,UAAU,mBAASkE,YAAT,mBAAhB;;AAqjBA,SAAS/D,YAAT,CAAsBjB,GAAtB,EAA2BE,IAA3B,EAAiC;AAC7BA,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;;AAEA,QAAImF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,uBAArB,CAAT,EAAwDnF,IAAxD,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH;;AAED,SAASlD,cAAT,CAAwBjC,GAAxB,EAA6BE,IAA7B,EAAmC;AAC/BA,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;AACA,QAAImF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAT,EAAuDnF,IAAvD,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH;;AAED;;;;;;;;AAQA,SAAStD,oBAAT,CAA8B7B,GAA9B,EAAmCE,IAAnC,EAAyC;AACrCA,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;AACA,QAAImF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,yBAArB,CAAT,EAA0DnF,IAA1D,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH;;AAED,SAASjC,yBAAT,CAAmClD,GAAnC,EAAwCE,IAAxC,EAA8C;AAC1CA,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;;AAEA;AACAE,SAAKoF,QAAL,GAAgBC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,SAAxC;;AAEAtD,UAAMjC,IAAN;AACA,QAAIiF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAAT,EAA6DnF,IAA7D,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH;;AAED,SAASvB,qBAAT,CAA+B5D,GAA/B,EAAoCE,IAApC,EAA0CuB,UAA1C,EAAsD;AAClD;AACAvB,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;;AAEA;AACAE,SAAK0B,YAAL,GAAoB;AAChBD,YAAIF;AADY,KAApB;;AAIA;AACAvB,SAAKwF,gBAAL,GAAwB;AACpB/D,YAAIF;AADgB,KAAxB;;AAIA;AACAvB,SAAKoF,QAAL,GAAgBC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,SAAxC;;AAEAtD,UAAMjC,IAAN;AACA,QAAIiF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAT,EAA4DnF,IAA5D,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH;;AAED,SAAST,kBAAT,CAA4B1E,GAA5B,EAAiCE,IAAjC,EAAuCuB,UAAvC,EAAmD;AAC/C;AACAvB,SAAK+E,SAAL,GAAiBH,YAAYI,YAAZ,CAAyBlF,GAAzB,CAAjB;;AAEA;AACAE,SAAK0B,YAAL,GAAoB;AAChBD,YAAIF;AADY,KAApB;;AAIA;AACAvB,SAAKwF,gBAAL,GAAwB;AACpB/D,YAAIF;AADgB,KAAxB;;AAIA;AACAvB,SAAKoF,QAAL,GAAgBC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,SAAxC;;AAEAtD,UAAMjC,IAAN;AACA,QAAIiF,OAAO,2BAAS,eAAKC,IAAL,CAAUC,SAAV,EAAqB,8BAArB,CAAT,EAA+DnF,IAA/D,CAAX;AACAF,QAAImB,IAAJ,GAAWgE,IAAX;AACH","file":"controllers/project.js","sourcesContent":["/**\n * Created by Bell on 16/8/29.\n */\n\nimport template from 'art-template';\nimport path from 'path';\nimport url from 'url';\nimport Request from 'request';\nimport bluebird from 'bluebird';\n\nimport config from '../config';\nimport * as token from '../utils/token';\n\nimport * as render_data from '../tools/data';\n\nimport Debug from 'debug';\nimport pkg from '../../package.json';\nconst debug = new Debug(pkg.name);\n\nconst request = bluebird.promisifyAll(Request);\n\nexport async function list(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/my'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'List projects failed';\n        listWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.projects = JSON.parse(body);\n        listWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        data.error = 'List projects failed';\n        listWithData(ctx, data);\n    }\n}\n\nexport async function detail(ctx, next) {\n    const project_id = ctx.params.id;\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project detail\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            renderDetailWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.detail = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            renderDetailWithData(ctx, data);\n            return;\n        }\n    }\n\n    // patches list\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get patches failed';\n            renderDetailWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.patches = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get patches failed';\n            renderDetailWithData(ctx, data);\n            return;\n        }\n    }\n\n    renderDetailWithData(ctx, data);\n}\n\nexport async function create(ctx, next) {\n    const data = {\n        name_autofocus: 'autofocus'\n    };\n    createWithData(ctx, data);\n}\n\nexport async function createRequest(ctx, next) {\n    const bearerToken = token.bearerToken(ctx);\n\n    let data = ctx.request.body;\n    debug(data);\n    const options = {\n        url: url.resolve(config.api_address, '/projects'),\n        headers: {\n            contentType: 'application/json',\n            Authorization: bearerToken,\n            Accept: config.accept\n        },\n        json: true,\n        body: data\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Create project failed';\n        createWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200 || statusCode == 201) {\n        ctx.redirect('/projects/' + body._id);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        if (statusCode == 422) {\n            if (body && body.errors && body.errors.length > 0) {\n                const error = body.errors[0];\n                if (error.field == 'name') {\n                    data.name_autofocus = 'autofocus';\n                    data.name_error = body.message;\n                } else {\n                    data.error = body.message;\n                }\n            } else {\n                data.error = body.message;\n            }\n        } else {\n            data.error = 'Create project failed';\n        }\n        createWithData(ctx, data);\n    }\n}\n\n\nexport async function createPatch(ctx, next) {\n    let data = {};\n    const project_id = ctx.params.id;\n    data.id = project_id;\n\n    // project versions\n    const versions_object = await getProjectVewsions(ctx);\n    if (versions_object) {\n        data.project_versions = versions_object.project_versions;\n        data.project_name = versions_object.project_name;\n    }\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    renderCreatePatchWithData(ctx, data);\n}\n\nexport async function createPatchRequest(ctx, next) {\n    const project_id = ctx.params.id;\n    const bearerToken = token.bearerToken(ctx);\n    let data = ctx.request.body;\n    debug(data);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n        json: true,\n        headers: {\n            contentType: config.content_type,\n            Authorization: bearerToken,\n            Accept: config.accept\n        },\n        body: data\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Create patch failed';\n        renderCreatePatchWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200 || statusCode == 201) {\n        ctx.redirect('/projects/' + project_id);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        if (statusCode == 422) {\n            if (body && body.errors && body.errors.length > 0) {\n                const error = body.errors[0];\n                if (error.field == 'project_version') {\n                    data.project_version_autofocus = 'autofocus';\n                    data.project_version_error = body.message;\n                } else if (error.field == 'hash') {\n                    data.hash_autofocus = 'autofocus';\n                    data.hash_error = body.message;\n                } else if (error.field == 'patch_url') {\n                    data.patch_url_autofocus = 'autofocus';\n                    data.patch_url_error = body.message;\n                } else {\n                    data.error = body.message;\n                }\n            } else {\n                data.error = body.message;\n            }\n        } else {\n            data.error = 'Create patch failed';\n        }\n        createWithData(ctx, data);\n    }\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    data.id = project_id;\n    renderCreatePatchWithData(ctx, data);\n}\n\nexport async function setInfo(ctx, next) {\n    const project_id = ctx.params.id;\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n\n    // project detail\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode === 200) {\n            data.content = JSON.parse(body);\n        } else if (statusCode === 401) {\n            ctx.redirect('/login');\n            return;\n        } else if (statusCode === 422) {\n            data.error = body.message;\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        }\n    }\n\n    // patches list\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get patches failed';\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode === 200) {\n            data.patches = JSON.parse(body);\n        } else if (statusCode === 401) {\n            ctx.redirect('/login');\n            return;\n        } else if (statusCode === 422) {\n            data.error = body.message;\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        } else {\n            data.error = 'Get patches failed';\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        }\n    }\n\n    renderSetInfoWithData(ctx, data, project_id);\n}\n\nexport async function setInfoRequest(ctx, next) {\n    const project_id = ctx.params.id;\n    const bearerToken = token.bearerToken(ctx);\n    const request_body = ctx.request.body;\n    let data = {\n        content: request_body\n    };\n    debug(data);\n\n    const options = {\n        url: url.resolve(config.api_address, '/projects/' + project_id),\n        headers: {\n            contentType: 'application/json',\n            Authorization: bearerToken,\n            Accept: config.accept\n        },\n        json: true,\n        body: request_body\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Update project info failed';\n        renderSetInfoWithData(ctx, data, project_id);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode >= 200 && statusCode < 300) {\n        ctx.redirect('/projects/' + project_id);\n    } else if (statusCode === 401) {\n        ctx.redirect('/login');\n        return;\n    } else if (statusCode === 422) {\n        if (body.field = 'name') {\n            data.name_error = body.message;\n            data.name_autofocus = 'autofocus';\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        } else {\n            data.error = body.message;\n            renderSetInfoWithData(ctx, data, project_id);\n            return;\n        }\n    } else {\n        data.error = 'Update project info failed';\n        renderSetInfoWithData(ctx, data, project_id);\n        return;\n    }\n}\n\nexport async function setMembers(ctx, next) {\n    const project_id = ctx.params.id;\n    return renderSettingMembers(ctx, null, project_id);\n}\n\nexport async function addMemberRequest(ctx, next) {\n    const project_id = ctx.params.id;\n    const bearerToken = token.bearerToken(ctx);\n\n    const request_body = ctx.request.body;\n    debug(request_body);\n\n    let data = {};\n\n    // add member\n    data.add_member = request_body;\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/members'),\n            headers: {\n                Authorization: bearerToken,\n                contentType: config.content_type,\n                Accept: config.accept\n            },\n            json: true,\n            body: request_body\n        };\n        let response = null;\n        try {\n            response = await request.postAsync(options);\n        } catch (err) {\n            data.add_error = 'Add member failed';\n            data.add_email_autofocus = 'autofocus';\n            return renderSettingMembers(ctx, data, project_id);\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode >= 200 && statusCode < 300) {\n            return renderSettingMembers(ctx, data, project_id);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else if (statusCode == 422) {\n            data.add_error = body.message\n            data.add_email_autofocus = 'autofocus';\n            return renderSettingMembers(ctx, data, project_id);\n        } else {\n            data.add_error = 'Add member failed';\n            data.add_email_autofocus = 'autofocus';\n            return renderSettingMembers(ctx, data, project_id);\n        }\n    }\n}\n\nexport async function deleteMemberRequest(ctx, next) {\n    const project_id = ctx.params.id;\n    const member_id = ctx.params.member_id;\n    const bearerToken = token.bearerToken(ctx);\n\n    let data = {};\n\n    // delete member\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/members/' + member_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.deleteAsync(options);\n        } catch (err) {\n            data.error = 'Delete member failed';\n            return renderSettingMembers(ctx, data, project_id);\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode >= 200 && statusCode < 300) {\n            return renderSettingMembers(ctx, data, project_id);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Delete member failed';\n            return renderSettingMembers(ctx, data, project_id);\n        }\n    }\n}\n\n\n// private request\n\nasync function renderSettingMembers(ctx, data, project_id) {\n    data = data || {};\n    // const project_id = ctx.params.id;\n    const bearerToken = token.bearerToken(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project detail\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            setMembersWithData(ctx, data, project_id);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode >= 200 && statusCode < 300) {\n            data.detail = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            setMembersWithData(ctx, data, project_id);\n            return;\n        }\n    }\n    setMembersWithData(ctx, data, project_id);\n}\n\nasync function getProjectVewsions(ctx) {\n    const project_id = ctx.params.id;\n\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/' + project_id + '/versions'),\n        headers: {\n            contentType: 'application/json',\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        return null;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    debug(body);\n    if (statusCode >= 200 && statusCode < 300) {\n        let versions_object = JSON.parse(body);\n        debug(versions_object);\n        let project_versions = [];\n        for (let version of versions_object.versions) {\n            project_versions.push(version._id);\n        }\n        versions_object.project_versions = project_versions;\n        return versions_object;\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    }\n    return null;\n}\n\n// private render\n\nfunction listWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    let html = template(path.join(__dirname, '../views/project/list'), data);\n    ctx.body = html;\n}\n\nfunction createWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n    let html = template(path.join(__dirname, '../views/project/new'), data);\n    ctx.body = html;\n}\n\n/**\n * render project detail\n *\n * @param ctx\n * @param detail {object}\n * @param projects {array}\n * @param error {string}\n */\nfunction renderDetailWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n    let html = template(path.join(__dirname, '../views/project/detail'), data);\n    ctx.body = html;\n}\n\nfunction renderCreatePatchWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    // config js\n    data.node_env = process.env.NODE_ENV || 'default';\n\n    debug(data);\n    let html = template(path.join(__dirname, '../views/project/new-patch'), data);\n    ctx.body = html;\n}\n\nfunction renderSetInfoWithData(ctx, data, project_id) {\n    // main menu\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project set menu\n    data.project_set_menu = {\n        id: project_id\n    };\n\n    // config js\n    data.node_env = process.env.NODE_ENV || 'default';\n\n    debug(data);\n    let html = template(path.join(__dirname, '../views/project/set-info'), data);\n    ctx.body = html;\n}\n\nfunction setMembersWithData(ctx, data, project_id) {\n    // main menu\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project set menu\n    data.project_set_menu = {\n        id: project_id\n    };\n\n    // config js\n    data.node_env = process.env.NODE_ENV || 'default';\n\n    debug(data);\n    let html = template(path.join(__dirname, '../views/project/set-members'), data);\n    ctx.body = html;\n}\n\n\n"],"sourceRoot":"/source/"}