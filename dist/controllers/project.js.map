{"version":3,"sources":["controllers/project.js"],"names":["ctx","next","data","bearerToken","token","options","url","resolve","api_address","headers","Authorization","Accept","accept","response","request","getAsync","error","listWithData","statusCode","body","projects","JSON","parse","redirect","list","project_id","params","id","project_menu","detailWithData","detail","patches","name_autofocus","createWithData","create","debug","json","contentType","postAsync","_id","errors","length","field","name_error","message","createRequest","getProjectVewsions","version_object","project_versions","versions","createPatchWithData","createPatch","content_type","project_version_autofocus","project_version_error","patch_version_autofocus","patch_version_error","hash_autofocus","hash_error","patch_url_autofocus","patch_url_error","createPatchRequest","setInfoWithData","setInfo","setInfoRequest","setMembers","addMemberRequest","cookie","name","promisifyAll","role","getRole","main_menu","admin","html","join","__dirname"],"mappings":"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","file":"controllers/project.js","sourcesContent":["/**\n * Created by Bell on 16/8/29.\n */\n\nimport template from 'art-template';\nimport path from 'path';\nimport url from 'url';\nimport Request from 'request';\nimport bluebird from 'bluebird';\n\nimport config from '../config';\nimport * as token from '../utils/token';\nimport * as cookie from '../utils/cookie';\n\nimport Debug from 'debug';\nimport pkg from '../../package.json';\nconst debug = new Debug(pkg.name);\n\nconst request = bluebird.promisifyAll(Request);\n\nexport async function list(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/my'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'List projects failed';\n        listWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.projects = JSON.parse(body);\n        listWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        data.error = 'List projects failed';\n        listWithData(ctx, data);\n    }\n}\n\nexport async function detail(ctx, next) {\n    const project_id = ctx.params.id;\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project detail\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            detailWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.detail = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            detailWithData(ctx, data);\n            return;\n        }\n    }\n\n    // patches list\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get patches failed';\n            detailWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.patches = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get patches failed';\n            detailWithData(ctx, data);\n            return;\n        }\n    }\n\n    detailWithData(ctx, data);\n}\n\nexport async function create(ctx, next) {\n    const data = {\n        name_autofocus: 'autofocus'\n    };\n    createWithData(ctx, data);\n}\n\nexport async function createRequest(ctx, next) {\n    const bearerToken = token.bearerToken(ctx);\n\n    let data = ctx.request.body;\n    debug(data);\n    const options = {\n        url: url.resolve(config.api_address, '/projects'),\n        json: true,\n        headers: {\n            contentType: 'application/json',\n            Authorization: bearerToken,\n            Accept: config.accept\n        },\n        body: data\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Create project failed';\n        createWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200 || statusCode == 201) {\n        ctx.redirect('/projects/' + body._id);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        if (statusCode == 422) {\n            if (body && body.errors && body.errors.length > 0) {\n                const error = body.errors[0];\n                if (error.field == 'name') {\n                    data.name_autofocus = 'autofocus';\n                    data.name_error = body.message;\n                } else {\n                    data.error = body.message;\n                }\n            } else {\n                data.error = body.message;\n            }\n        } else {\n            data.error = 'Create project failed';\n        }\n        createWithData(ctx, data);\n    }\n}\n\n\nexport async function createPatch(ctx, next) {\n    let data = {};\n    const project_id = ctx.params.id;\n    data.id = project_id;\n\n    // project versions\n    const version_object = await getProjectVewsions(ctx);\n    if (version_object) {\n        data.project_versions = version_object.versions;\n    }\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    createPatchWithData(ctx, data);\n}\n\nexport async function createPatchRequest(ctx, next) {\n    const project_id = ctx.params.id;\n    const bearerToken = token.bearerToken(ctx);\n    let data = ctx.request.body;\n    debug(data);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n        json: true,\n        headers: {\n            contentType: config.content_type,\n            Authorization: bearerToken,\n            Accept: config.accept\n        },\n        body: data\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Create patch failed';\n        createPatchWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200 || statusCode == 201) {\n        ctx.redirect('/projects/' + project_id);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else {\n        if (statusCode == 422) {\n            if (body && body.errors && body.errors.length > 0) {\n                const error = body.errors[0];\n                if (error.field == 'project_version') {\n                    data.project_version_autofocus = 'autofocus';\n                    data.project_version_error = body.message;\n                } else if (error.field == 'patch_version') {\n                    data.patch_version_autofocus = 'autofocus';\n                    data.patch_version_error = body.message;\n                } else if (error.field == 'hash') {\n                    data.hash_autofocus = 'autofocus';\n                    data.hash_error = body.message;\n                } else if (error.field == 'patch_url') {\n                    data.patch_url_autofocus = 'autofocus';\n                    data.patch_url_error = body.message;\n                } else {\n                    data.error = body.message;\n                }\n            } else {\n                data.error = body.message;\n            }\n        } else {\n            data.error = 'Create patch failed';\n        }\n        createWithData(ctx, data);\n    }\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    data.id = project_id;\n    createPatchWithData(ctx, data);\n}\n\nexport async function setInfo(ctx, next) {\n    const project_id = ctx.params.id;\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n\n    // project menu\n    data.project_menu = {\n        id: project_id\n    };\n\n    // project detail\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            setInfoWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.detail = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            setInfoWithData(ctx, data);\n            return;\n        }\n    }\n\n    // patches list\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id + '/patches'),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get patches failed';\n            setInfoWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode == 200) {\n            data.patches = JSON.parse(body);\n        } else if (statusCode == 401) {\n            ctx.redirect('/login');\n            return;\n        } else {\n            data.error = 'Get patches failed';\n            setInfoWithData(ctx, data);\n            return;\n        }\n    }\n\n    setInfoWithData(ctx, data);\n}\n\nexport async function setInfoRequest(ctx, next) {\n\n}\n\nexport async function setMembers(ctx, next) {\n\n}\n\nexport async function addMemberRequest(ctx, next) {\n\n}\n\nfunction listWithData(ctx, data) {\n    const role = cookie.getRole(ctx);\n    if (role === 1) {\n        data.main_menu = {\n            admin: 1\n        };\n    }\n    let html = template(path.join(__dirname, '../views/project/list'), data);\n    ctx.body = html;\n}\n\nfunction createWithData(ctx, data) {\n    const role = cookie.getRole(ctx);\n    if (role === 1) {\n        data.main_menu = {\n            admin: 1\n        };\n    }\n    let html = template(path.join(__dirname, '../views/project/new'), data);\n    ctx.body = html;\n}\n\n/**\n * render project detail\n *\n * @param ctx\n * @param detail {object}\n * @param projects {array}\n * @param error {string}\n */\nfunction detailWithData(ctx, data) {\n    debug(data);\n    const role = cookie.getRole(ctx);\n    if (role === 1) {\n        data.main_menu = {\n            admin: 1\n        };\n    }\n    let html = template(path.join(__dirname, '../views/project/detail'), data);\n    ctx.body = html;\n}\n\nfunction createPatchWithData(ctx, data) {\n    const role = cookie.getRole(ctx);\n    if (role === 1) {\n        data.main_menu = {\n            admin: 1\n        };\n    }\n    debug(data);\n    let html = template(path.join(__dirname, '../views/project/new-patch'), data);\n    ctx.body = html;\n}\n\nasync function getProjectVewsions(ctx) {\n    const project_id = ctx.params.id;\n\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/projects/' + project_id + '/versions'),\n        headers: {\n            contentType: 'application/json',\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        return null;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode >= 200 && statusCode < 300) {\n        return JSON.parse(body);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    }\n    return null;\n}"],"sourceRoot":"/source/"}