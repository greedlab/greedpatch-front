{"version":3,"sources":["controllers/admin.js"],"names":["ctx","next","data","bearerToken","token","options","url","resolve","api_address","headers","Authorization","Accept","accept","response","request","getAsync","error","listUsersWithData","statusCode","body","users","JSON","parse","redirect","listUsers","id","params","modifyPasswordWithData","user","message","modifyPassword","_id","request_body","email","password","postAsync","modifyPasswordRequest","permissionWithData","permission","debug","contentType","content_type","json","putAsync","permissionRequest","listProjectsWithData","projects","listProjects","render_data","name","promisifyAll","main_menu","mainMenuData","node_env","process","env","NODE_ENV","html","join","__dirname"],"mappings":"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","file":"controllers/admin.js","sourcesContent":["/**\n * Created by Bell on 16/9/23.\n */\n\nimport template from 'art-template';\nimport path from 'path';\nimport url from 'url';\nimport Request from 'request';\nimport bluebird from 'bluebird';\n\nimport config from '../config';\nimport * as token from '../tools/token';\n\nimport * as render_data from '../tools/data';\n\nimport Debug from 'debug';\nimport pkg from '../../package.json';\nconst debug = new Debug(pkg.name);\n\nconst request = bluebird.promisifyAll(Request);\n\nexport async function listUsers(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/users'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'List users failed';\n        listUsersWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.users = JSON.parse(body);\n        listUsersWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        listUsersWithData(ctx, data);\n    } else {\n        data.error = 'List users failed';\n        listUsersWithData(ctx, data);\n    }\n}\n\nexport async function modifyPassword(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const id = ctx.params.id;\n    const options = {\n        url: url.resolve(config.api_address, '/users/' + id + '/profile'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'Get user\\'s profile failed';\n        modifyPasswordWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.user = JSON.parse(body);\n        modifyPasswordWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        modifyPasswordWithData(ctx, data);\n    } else if (statusCode == 422) {\n        data.error = body.message;\n        modifyPasswordWithData(ctx, data);\n    } else {\n        data.error = 'Get user\\'s profile failed';\n        modifyPasswordWithData(ctx, data);\n    }\n}\n\nexport async function modifyPasswordRequest(ctx, next) {\n    let data = {};\n    const id = ctx.params.id;\n    let user = {};\n    data.user = user;\n    user._id = id;\n\n    const request_body = ctx.request.body;\n    if (!request_body) {\n        data.error = 'Update user\\'s password failed';\n        modifyPasswordWithData(ctx, data);\n        return;\n    }\n\n    const email = request_body.email;\n    if (!email) {\n        data.error = 'Email is empty';\n        modifyPasswordWithData(ctx, data);\n        return;\n    }\n    user.email = email;\n\n    const password = request_body.password;\n    if (!password) {\n        data.error = 'Password is empty';\n        modifyPasswordWithData(ctx, data);\n        return;\n    }\n    user.password = password;\n\n    const bearerToken = token.bearerToken(ctx);\n\n    const options = {\n        url: url.resolve(config.api_address, '/users/' + id + '/password'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.postAsync(options);\n    } catch (err) {\n        data.error = 'Update user\\'s password failed';\n        modifyPasswordWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode >= 200 || statusCode < 300) {\n        ctx.redirect('/admin/user');\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        modifyPasswordWithData(ctx, data);\n    } else if (statusCode == 422) {\n        data.error = body.message;\n        modifyPasswordWithData(ctx, data);\n    } else {\n        data.error = 'Update user\\'s password failed';\n        modifyPasswordWithData(ctx, data);\n    }\n}\n\nexport async function permission(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/permissions/0'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'Get permission failed';\n        permissionWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.permission = JSON.parse(body) || {};\n        permissionWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        permissionWithData(ctx, data);\n    } else {\n        data.error = 'Get permission failed';\n        permissionWithData(ctx, data);\n    }\n}\n\nexport async function permissionRequest(ctx, next) {\n    const request_body = ctx.request.body;\n    debug(request_body);\n    let data = {};\n    data.permission = request_body;\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/permissions/0'),\n        headers: {\n            Authorization: bearerToken,\n            contentType: config.content_type,\n            Accept: config.accept\n        },\n        json: true,\n        body: request_body\n    };\n    let response = null;\n    try {\n        response = await request.putAsync(options);\n    } catch (err) {\n        data.error = 'Update permission failed';\n        permissionWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode >= 200 && statusCode < 300) {\n        ctx.redirect('/admin/permission');\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        permissionWithData(ctx, data);\n    } else {\n        data.error = 'Update permission failed';\n        permissionWithData(ctx, data);\n    }\n}\n\nexport async function listProjects(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n    const options = {\n        url: url.resolve(config.api_address, '/projects'),\n        headers: {\n            Authorization: bearerToken,\n            Accept: config.accept\n        }\n    };\n    let response = null;\n    try {\n        response = await request.getAsync(options);\n    } catch (err) {\n        data.error = 'List projects failed';\n        listProjectsWithData(ctx, data);\n        return;\n    }\n\n    const statusCode = response.statusCode;\n    const body = response.body;\n    if (statusCode == 200) {\n        data.projects = JSON.parse(body);\n        listProjectsWithData(ctx, data);\n    } else if (statusCode == 401) {\n        ctx.redirect('/login');\n    } else if (statusCode == 403) {\n        data.error = 'No permission';\n        listProjectsWithData(ctx, data);\n    } else {\n        data.error = 'List projects failed';\n        listProjectsWithData(ctx, data);\n    }\n}\n\n// private render\n\nfunction listUsersWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    // config js\n    data.node_env = process.env.NODE_ENV || 'default';\n\n    debug(data);\n\n    let html = template(path.join(__dirname, '../views/admin/user'), data);\n    ctx.body = html;\n}\n\nfunction permissionWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n    debug(data);\n    let html = template(path.join(__dirname, '../views/admin/permission'), data);\n    ctx.body = html;\n}\n\nfunction listProjectsWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    // config js\n    data.node_env = process.env.NODE_ENV || 'default';\n\n    debug(data);\n    let html = template(path.join(__dirname, '../views/admin/project'), data);\n    ctx.body = html;\n}\n\nfunction modifyPasswordWithData(ctx, data) {\n    data.main_menu = render_data.mainMenuData(ctx);\n\n    debug(data);\n    let html = template(path.join(__dirname, '../views/admin/modify-password'), data);\n    ctx.body = html;\n}\n\n"],"sourceRoot":"/source/"}