{"version":3,"sources":["controllers/setting.js"],"names":["ctx","next","data","bearerToken","token","options","url","resolve","api_address","project_id","headers","Authorization","Accept","accept","response","request","getAsync","error","settingProfileWithData","statusCode","body","content","JSON","parse","redirect","message","profile","profileRequest","account","modifyPassword","tokens","createToken","createTokenRequest","tokenDetail","render_data","debug","name","promisifyAll"],"mappings":"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","file":"controllers/setting.js","sourcesContent":["/**\n * Created by Bell on 16/9/7.\n */\n\nimport template from 'art-template';\nimport path from 'path';\nimport url from 'url';\nimport Request from 'request';\nimport bluebird from 'bluebird';\n\nimport config from '../config';\nimport * as token from '../utils/token';\n\nimport * as render_data from '../tools/data';\n\nimport Debug from 'debug';\nimport pkg from '../../package.json';\nconst debug = new Debug(pkg.name);\n\nconst request = bluebird.promisifyAll(Request);\n\nexport async function profile(ctx, next) {\n    let data = {};\n    const bearerToken = token.bearerToken(ctx);\n\n    // user profile\n    {\n        const options = {\n            url: url.resolve(config.api_address, '/projects/' + project_id),\n            headers: {\n                Authorization: bearerToken,\n                Accept: config.accept\n            }\n        };\n        let response = null;\n        try {\n            response = await request.getAsync(options);\n        } catch (err) {\n            data.error = 'Get project detail failed';\n            settingProfileWithData(ctx, data);\n            return;\n        }\n\n        const statusCode = response.statusCode;\n        const body = response.body;\n        if (statusCode === 200) {\n            data.content = JSON.parse(body);\n        } else if (statusCode === 401) {\n            ctx.redirect('/login');\n            return;\n        } else if (statusCode === 422) {\n            data.error = body.message;\n            settingProfileWithData(ctx, data);\n            return;\n        } else {\n            data.error = 'Get project detail failed';\n            settingProfileWithData(ctx, data);\n            return;\n        }\n    }\n    settingProfileWithData(ctx, data);\n}\n\nexport async function profileRequest(ctx, next) {\n\n}\n\nexport async function account(ctx, next) {\n\n}\n\nexport async function modifyPassword(ctx, next) {\n\n}\n\nexport async function tokens(ctx, next) {\n\n}\n\nexport async function createToken(ctx, next) {\n\n}\n\nexport async function createTokenRequest(ctx, next) {\n\n}\n\nexport async function tokenDetail(ctx, next) {\n\n}\n\n// render\n\nasync function settingProfileWithData(ctx, data) {\n\n}"],"sourceRoot":"/source/"}