{"version":3,"sources":["utils/cookie.js"],"names":["setToken","getToken","clearToken","setUserRole","getUserRole","clearUserRole","setUserEmail","getUserEmail","clearUserEmail","clear","token_key","user_role_key","user_email_key","ctx","token","cookies","set","domain","cookie_domain","signed","httpOnly","maxAge","get"],"mappings":";;;;;QAUgBA,Q,GAAAA,Q;QASAC,Q,GAAAA,Q;QAMAC,U,GAAAA,U;QAMAC,W,GAAAA,W;QASAC,W,GAAAA,W;QAMAC,a,GAAAA,a;QAMAC,Y,GAAAA,Y;QAQAC,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAIAC,K,GAAAA,K;;AAhEhB;;;;;;AAEA,IAAMC,YAAY,OAAlB,C,CANA;;;;AAOA,IAAMC,gBAAgB,WAAtB;AACA,IAAMC,iBAAiB,YAAvB;;AAEO,SAASZ,QAAT,CAAkBa,GAAlB,EAAuBC,KAAvB,EAA8B;AACjCD,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBN,SAAhB,EAA2BI,KAA3B,EAAkC;AAC9BG,gBAAQ,iBAAOC,aADe;AAE9BC,gBAAQ,IAFsB;AAG9BC,kBAAU,IAHoB;AAI9BC,gBAAQA;AAJsB,KAAlC;AAMH;;AAEM,SAASpB,QAAT,CAAkBY,GAAlB,EAAuB;AAC1B,WAAOA,IAAIE,OAAJ,CAAYO,GAAZ,CAAgBZ,SAAhB,EAA2B;AAC9BS,gBAAQ;AADsB,KAA3B,CAAP;AAGH;;AAEM,SAASjB,UAAT,CAAoBW,GAApB,EAAyB;AAC5BA,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBN,SAAhB,EAA2B,IAA3B,EAAiC;AAC7BS,gBAAQ;AADqB,KAAjC;AAGH;;AAEM,SAAShB,WAAT,CAAqBU,GAArB,EAA0BC,KAA1B,EAAiC;AACpCD,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBL,aAAhB,EAA+BG,KAA/B,EAAsC;AAClCG,gBAAQ,iBAAOC,aADmB;AAElCC,gBAAQ,IAF0B;AAGlCC,kBAAU,IAHwB;AAIlCC,gBAAQA;AAJ0B,KAAtC;AAMH;;AAEM,SAASjB,WAAT,CAAqBS,GAArB,EAA0B;AAC7B,WAAOA,IAAIE,OAAJ,CAAYO,GAAZ,CAAgBX,aAAhB,EAA+B;AAClCQ,gBAAQ;AAD0B,KAA/B,CAAP;AAGH;;AAEM,SAASd,aAAT,CAAuBQ,GAAvB,EAA4B;AAC/BA,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBL,aAAhB,EAA+B,IAA/B,EAAqC;AACjCQ,gBAAQ;AADyB,KAArC;AAGH;;AAEM,SAASb,YAAT,CAAsBO,GAAtB,EAA2BC,KAA3B,EAAkC;AACrCD,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBJ,cAAhB,EAAgCE,KAAhC,EAAuC;AACnCG,gBAAQ,iBAAOC,aADoB;AAEnCE,kBAAU,IAFyB;AAGnCC,gBAAQA;AAH2B,KAAvC;AAKH;;AAEM,SAASd,YAAT,CAAsBM,GAAtB,EAA2B;AAC9B,WAAOA,IAAIE,OAAJ,CAAYO,GAAZ,CAAgBV,cAAhB,CAAP;AACH;;AAEM,SAASJ,cAAT,CAAwBK,GAAxB,EAA6B;AAChCA,QAAIE,OAAJ,CAAYC,GAAZ,CAAgBJ,cAAhB,EAAgC,IAAhC;AACH;;AAEM,SAASH,KAAT,CAAeI,GAAf,EAAoB;AACvBX,eAAWW,GAAX;AACAR,kBAAcQ,GAAd;AACAL,mBAAeK,GAAf;AACH;;AAED,SAASQ,MAAT,GAAkB;AACd,WAAO,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAA1B;AACH","file":"utils/cookie.js","sourcesContent":["/**\n * Created by Bell on 16/9/1.\n */\n\nimport config from '../config'\n\nconst token_key = 'token';\nconst user_role_key = 'user_role';\nconst user_email_key = 'user_email';\n\nexport function setToken(ctx, token) {\n    ctx.cookies.set(token_key, token, {\n        domain: config.cookie_domain,\n        signed: true,\n        httpOnly: true,\n        maxAge: maxAge()\n    });\n}\n\nexport function getToken(ctx) {\n    return ctx.cookies.get(token_key, {\n        signed: true\n    });\n}\n\nexport function clearToken(ctx) {\n    ctx.cookies.set(token_key, null, {\n        signed: true\n    });\n}\n\nexport function setUserRole(ctx, token) {\n    ctx.cookies.set(user_role_key, token, {\n        domain: config.cookie_domain,\n        signed: true,\n        httpOnly: true,\n        maxAge: maxAge()\n    });\n}\n\nexport function getUserRole(ctx) {\n    return ctx.cookies.get(user_role_key, {\n        signed: true\n    });\n}\n\nexport function clearUserRole(ctx) {\n    ctx.cookies.set(user_role_key, null, {\n        signed: true\n    });\n}\n\nexport function setUserEmail(ctx, token) {\n    ctx.cookies.set(user_email_key, token, {\n        domain: config.cookie_domain,\n        httpOnly: true,\n        maxAge: maxAge()\n    });\n}\n\nexport function getUserEmail(ctx) {\n    return ctx.cookies.get(user_email_key);\n}\n\nexport function clearUserEmail(ctx) {\n    ctx.cookies.set(user_email_key, null);\n}\n\nexport function clear(ctx) {\n    clearToken(ctx);\n    clearUserRole(ctx);\n    clearUserEmail(ctx);\n}\n\nfunction maxAge() {\n    return 7 * 24 * 60 * 60 * 1000;\n}\n"],"sourceRoot":"/source/"}